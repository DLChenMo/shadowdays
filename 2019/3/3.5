今日工作：
论文“Fog-Aided Verifiable Privacy Preserving Access Control for Latency-Sensitive Data Sharing in Vehicular Cloud Computing ”  2018年 IEEE Network
问题一：为什么用到两个雾服务器？
上传阶段用到两个不共谋的雾服务器：
两个雾服务器 fog1，fog2
对于共享文件M，数据的拥有者首先选择K，K1（两个加密共享文件的对称密钥），K2=K/K1，K1和K2分别给fog1和fog2。在访问策略P（P可以被数据拥着者或者雾服务器来
决定）下，fog1对K1加密，输出一个密文，同理fog2对K2用相同的访问策略P加密，也得到一个密文，两个密文都会被发送到云上，云会对这两个密文进行合成。
在后面的安全性分析的地方提到，对于两个不共谋的雾服务器，如果只知道密钥K1和K2中的一个，是无法计算对称密钥K的，也就不能获得明文，所以说两个雾服务器加密是提高了安全性。

问题二：为什么由云解密？
   首先这个地方是理解错的，并不是由云解密，而是云将被用户需要的数据找到外包给雾，然后雾和用户交互，用户从雾得到请求数据的密文，再解密出明文
   这个过程发生在下载阶段，用户向云发送一个预请求（用户根据自己的移动趋势和想要访问的数据对未来做一个预测），这个请求的内容包括感兴趣的数据，位置和时间信息。
（1）云随机选择一个临时的假名Psei，云自己存储用户的身份和假名，同时这个假名 Psei 也会被发给用户 
（2）云查找和选择用户想要的数据，检查用户是否可以访问密文
（3）用户不可以访问密文，拒绝请求；如果用户可以访问，首先云对文件（即请求访问的密文）和假名作哈希，然后基于用户的请求位置，发送（文件、哈希值、密文）给一个雾服务器
（4）用户和雾服务器交互后，得到请求的密文，用户恢复出明文M   
 所以说并不是云来解密的

问题三：如何实现的隐私保护？
（1）只有属性集满足访问策略的授权用户才可以解密出密文数据的明文
（2）存储在云上的所有的文件都是加密形式，阻止实体包括云本身（云不知道用户的私钥）获得私密信息
（3）身份隐私保护只考虑在数据查询和下载的阶段，雾和用户的交互的过程中。这里用户使用的是假名，雾只能从访问请求中知道假名但没法得知用户的真实身份。在这里
用户的身份对云是不隐藏的，因为云需要根据用户的身份将用户请求的数据首先给雾，雾再和用户交互

问题四：访问控制保护的是什么数据，如果是云上数据，怎么能用属性加密实现，以我的了解属性加密在加密时就决定了哪些属性能够访问，怎么实现访问控制
      并不是云上数据，我日志表述有误
总结一下这篇文章，fog to cloud 结构，从数据拥着者到fog，数据拥着者将复杂的计算任务外包给雾，自己只需要一些轻量级的计算；从cloud到fog，数据的下载
阶段，云提前根据用户的请求（这里的请求时用户自己对下一步的预测）将数据外包给fog，由fog和用户作交互，降低了时延。这是我理解的文章的思想
我觉得文章的借鉴之处，应该可以说是这个fog to cloud 这个架构，在传统的云模型下添加了雾层，更接近网络的边缘，高效且计算资源远大于车辆有限的资源。
还有就是车联网模型中可以不用RSU作为联系的中介，这个fog可以取代RSU
下午上了数据库技术；
晚上一点时间看了多服务器架构的双向认证和密钥协商，说实话，我还没怎么理解各个式子的含义，我明天继续看一下。
